<?php

/**
 * Implementation of hook_block_info
 */
function bb_newsletter_block_info() {

	$blocks['bb_newsletter_subscribe'] = array(
	  'info' => t('Subscribe for newsletter block'),
	);

	return $blocks;

}


/**
 * Implementation of hook_block_view
 */
function bb_newsletter_block_view($delta = '') {
 
  $block = array();

  if ($delta == 'bb_newsletter_subscribe') {
    $block['subject'] = t('Op de hoogte blijven?');
    $block['content'] = _bb_newsletter_subscribe_block_render();
  }
  
  return $block;
}


/**
 * Implementation of hook_menu
 */
function bb_newsletter_menu() {
  $items = array();
  
  $items['admin/config/system/newsletter'] = array(
    'title' => 'Newsletter settings',
    'description' => 'API settings for integration with Campaign Monitor',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bb_newsletter_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}



/**
 * Helper function to generate block
 */
function _bb_newsletter_subscribe_block_render() {

  $output = "Op de hoogte blijven? Schrijf je in voor de nieuwsbrief!" 
    . render(drupal_get_form('bb_newsletter_subscribe'));
	return $output;

}

/**
 * Generate subscription form
 */
function bb_newsletter_subscribe($form_state) {
	$form = array();

  $form['email'] = array(
		'#type' => 'textfield',
		'#title' => '',
		'#default_value' => 'E-mail adres',
		'#size' => 60,
  );	
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Subscribe'),
  );
  
  return $form;
}

/**
 * Submit function for subscription form
 */
function bb_newsletter_subscribe_submit($form, &$form_state) {

  $api_key                = variable_get('cm_api_key', '');
  $api_client_id          = variable_get('cm_client_api_key', '');
  $api_subscriber_list_id = variable_get('cm_api_subscriber_list_id', '');

  include_once(drupal_get_path('module', 'bb_newsletter') . '/lib/csrest_subscribers.php');
  
  $campaign_monitor = new CS_REST_Subscribers($api_subscriber_list_id, $api_key);
  
  $subscriber = array(
    'EmailAddress' => $form_state['values']['email'],
  	'Name' => '',
  	'CustomFields' => array(),
  	'Resubscribe' => TRUE,
  );
  
  $result = $campaign_monitor->add($subscriber);

  if ($result->http_status_code == '201') {
    drupal_set_message(t('Email address successfully added.'));
  } else {
	form_set_error('email', t('Could not subscribe email address. Please try again.')); 
  }
  
}

/**
 * Validation function for subscription form
 */
function bb_newsletter_subscribe_validate($form, &$form_state) {
  $email = $form_state['values']['email'];
  
  if (!valid_email_address($email)) {
	form_set_error('', t('Please enter a valid email address.'));  
  }
}

/**
 * Generate admin/settings form
 */
function bb_newsletter_settings($form_state) {
  $form['settings'] = array(
    '#type' => 'fieldset',
  	'#title' => t('Settings'),
  );	
  
  $form['settings']['cm_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('API Key'),
    '#default_value' => variable_get('cm_api_key', ''),
    '#size' => 60,
  );
  
  $form['settings']['cm_client_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Client\'s API Key'),
    '#default_value' => variable_get('cm_client_api_key', ''),
    '#size' => 60,
  );
  
  $form['settings']['cm_api_subscriber_list_id'] = array(
    '#type' => 'textfield',
    '#title' => t('API Subscriber List Id'),
    '#default_value' => variable_get('cm_api_subscriber_list_id', ''),
  );
  
  return system_settings_form($form);
}